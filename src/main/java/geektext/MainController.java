package geektext;

import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
//import org.springframework.web.bind.annotation.PostMapping;
//import org.springframework.web.bind.annotation.PutMapping;
//import org.springframework.web.bind.annotation.PatchMapping;
//import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.RequestMapping;
//import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.PathVariable;

@Controller // This means that this class is a Controller
@RequestMapping(path="/user") // This means URIs start with /user (after Application path)
public class MainController {
	@Autowired // This means to get the bean called userRepository
	// Which is auto-generated by Spring, we will use it to handle the data
	private UserRepository userRepository;

	@GetMapping(path="/all")
	@ResponseBody // This returns a JSON or XML with the users
	public Iterable<User> getAllUsers() {
		return userRepository.findAll();
	}
	
	@GetMapping(path="/{id}")
	@ResponseBody // This returns a JSON or XML of a single user by id
	public Optional<User> getUser(@PathVariable Integer id) {
		return userRepository.findById(id);
	}
}



// Jeffry Testing querys
// GET http://localhost:8080/book/genre?genre=Sci-Fi
// PATCH http://localhost:8080/book/discount?discountPercent=10&publisher_id=2
// GET http://localhost:8080/book/topSellers
